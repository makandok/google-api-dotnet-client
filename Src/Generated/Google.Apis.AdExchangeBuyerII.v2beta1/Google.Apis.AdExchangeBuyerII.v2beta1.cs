// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Ad Exchange Buyer API II Version v2beta1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/'>Ad Exchange Buyer API II</a>
 *      <tr><th>API Version<td>v2beta1
 *      <tr><th>API Rev<td>20160610 (526)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/'>
 *              https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/</a>
 *      <tr><th>Discovery Name<td>adexchangebuyer2
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Ad Exchange Buyer API II can be found at
 * <a href='https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/'>https://developers.google.com/ad-exchange/buyer-rest/guides/client-access/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.AdExchangeBuyerII.v2beta1
{
    /// <summary>The AdExchangeBuyerII Service.</summary>
    public class AdExchangeBuyerIIService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v2beta1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public AdExchangeBuyerIIService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public AdExchangeBuyerIIService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            accounts = new AccountsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "adexchangebuyer2"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://adexchangebuyer.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Ad Exchange Buyer API II.</summary>
        public class Scope
        {
            /// <summary>Manage your Ad Exchange buyer account configuration</summary>
            public static string AdexchangeBuyer = "https://www.googleapis.com/auth/adexchange.buyer";

        }



        private readonly AccountsResource accounts;

        /// <summary>Gets the Accounts resource.</summary>
        public virtual AccountsResource Accounts
        {
            get { return accounts; }
        }
    }

    ///<summary>A base abstract class for AdExchangeBuyerII requests.</summary>
    public abstract class AdExchangeBuyerIIBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new AdExchangeBuyerIIBaseServiceRequest instance.</summary>
        protected AdExchangeBuyerIIBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes AdExchangeBuyerII parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "accounts" collection of methods.</summary>
    public class AccountsResource
    {
        private const string Resource = "accounts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            clients = new ClientsResource(service);

        }

        private readonly ClientsResource clients;

        /// <summary>Gets the Clients resource.</summary>
        public virtual ClientsResource Clients
        {
            get { return clients; }
        }

        /// <summary>The "clients" collection of methods.</summary>
        public class ClientsResource
        {
            private const string Resource = "clients";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ClientsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                invitations = new InvitationsResource(service);
                users = new UsersResource(service);

            }

            private readonly InvitationsResource invitations;

            /// <summary>Gets the Invitations resource.</summary>
            public virtual InvitationsResource Invitations
            {
                get { return invitations; }
            }

            /// <summary>The "invitations" collection of methods.</summary>
            public class InvitationsResource
            {
                private const string Resource = "invitations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public InvitationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Creates and sends out an email invitation to access an Ad Exchange client buyer
                /// account.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="accountId">Numerical account ID of the client's sponsor buyer. (required)</param>
                /// <param
                /// name="clientAccountId">Numerical account ID of the client buyer that the user should be associated with.
                /// (required)</param>
                public virtual CreateRequest Create(Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUserInvitation body, long accountId, long clientAccountId)
                {
                    return new CreateRequest(service, body, accountId, clientAccountId);
                }

                /// <summary>Creates and sends out an email invitation to access an Ad Exchange client buyer
                /// account.</summary>
                public class CreateRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUserInvitation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUserInvitation body, long accountId, long clientAccountId)
                        : base(service)
                    {
                        AccountId = accountId;
                        ClientAccountId = clientAccountId;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Numerical account ID of the client's sponsor buyer. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long AccountId { get; private set; }

                    /// <summary>Numerical account ID of the client buyer that the user should be associated with.
                    /// (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long ClientAccountId { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUserInvitation Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "accountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "accountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "clientAccountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "clientAccountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Retrieves an existing client user invitation.</summary>
                /// <param name="accountId">Numerical account ID of the client's sponsor buyer. (required)</param>
                /// <param
                /// name="clientAccountId">Numerical account ID of the client buyer that the user invitation to be retrieved is
                /// associated with. (required)</param>
                /// <param name="invitationId">Numerical identifier of the user invitation
                /// to retrieve. (required)</param>
                public virtual GetRequest Get(long accountId, long clientAccountId, long invitationId)
                {
                    return new GetRequest(service, accountId, clientAccountId, invitationId);
                }

                /// <summary>Retrieves an existing client user invitation.</summary>
                public class GetRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUserInvitation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, long accountId, long clientAccountId, long invitationId)
                        : base(service)
                    {
                        AccountId = accountId;
                        ClientAccountId = clientAccountId;
                        InvitationId = invitationId;
                        InitParameters();
                    }


                    /// <summary>Numerical account ID of the client's sponsor buyer. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long AccountId { get; private set; }

                    /// <summary>Numerical account ID of the client buyer that the user invitation to be retrieved is
                    /// associated with. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long ClientAccountId { get; private set; }

                    /// <summary>Numerical identifier of the user invitation to retrieve. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("invitationId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long InvitationId { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "accountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "accountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "clientAccountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "clientAccountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "invitationId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "invitationId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Lists all the client users invitations for a client with a given account ID.</summary>
                /// <param name="accountId">Numerical account ID of the client's sponsor buyer. (required)</param>
                /// <param
                /// name="clientAccountId">Numerical account ID of the client buyer to list invitations for. (required) You must either
                /// specify a string representation of a numerical account identifier or the `-` character to list all the invitations
                /// for all the clients of a given sponsor buyer.</param>
                public virtual ListRequest List(long accountId, string clientAccountId)
                {
                    return new ListRequest(service, accountId, clientAccountId);
                }

                /// <summary>Lists all the client users invitations for a client with a given account ID.</summary>
                public class ListRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ListClientUserInvitationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, long accountId, string clientAccountId)
                        : base(service)
                    {
                        AccountId = accountId;
                        ClientAccountId = clientAccountId;
                        InitParameters();
                    }


                    /// <summary>Numerical account ID of the client's sponsor buyer. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long AccountId { get; private set; }

                    /// <summary>Numerical account ID of the client buyer to list invitations for. (required) You must
                    /// either specify a string representation of a numerical account identifier or the `-` character to
                    /// list all the invitations for all the clients of a given sponsor buyer.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ClientAccountId { get; private set; }

                    /// <summary>Requested page size. Server may return fewer clients than requested. If unspecified,
                    /// server will pick an appropriate default.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>A token identifying a page of results the server should return. Typically, this is the
                    /// value of ListClientUserInvitationsResponse.nextPageToken returned from the previous call to the
                    /// clients.invitations.list method.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "accountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "accountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "clientAccountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "clientAccountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }
            private readonly UsersResource users;

            /// <summary>Gets the Users resource.</summary>
            public virtual UsersResource Users
            {
                get { return users; }
            }

            /// <summary>The "users" collection of methods.</summary>
            public class UsersResource
            {
                private const string Resource = "users";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public UsersResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Retrieves an existing client user.</summary>
                /// <param name="accountId">Numerical account ID of the client's sponsor buyer. (required)</param>
                /// <param
                /// name="clientAccountId">Numerical account ID of the client buyer that the user to be retrieved is associated with.
                /// (required)</param>
                /// <param name="userId">Numerical identifier of the user to retrieve.
                /// (required)</param>
                public virtual GetRequest Get(long accountId, long clientAccountId, long userId)
                {
                    return new GetRequest(service, accountId, clientAccountId, userId);
                }

                /// <summary>Retrieves an existing client user.</summary>
                public class GetRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUser>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, long accountId, long clientAccountId, long userId)
                        : base(service)
                    {
                        AccountId = accountId;
                        ClientAccountId = clientAccountId;
                        UserId = userId;
                        InitParameters();
                    }


                    /// <summary>Numerical account ID of the client's sponsor buyer. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long AccountId { get; private set; }

                    /// <summary>Numerical account ID of the client buyer that the user to be retrieved is associated
                    /// with. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long ClientAccountId { get; private set; }

                    /// <summary>Numerical identifier of the user to retrieve. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long UserId { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "get"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}"; }
                    }

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "accountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "accountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "clientAccountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "clientAccountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "userId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "userId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Lists all the known client users for a specified sponsor buyer account ID.</summary>
                /// <param name="accountId">Numerical account ID of the sponsor buyer of the client to list users for.
                /// (required)</param>
                /// <param name="clientAccountId">The account ID of the client buyer to list users for.
                /// (required) You must specify either a string representation of a numerical account identifier or the `-` character to
                /// list all the client users for all the clients of a given sponsor buyer.</param>
                public virtual ListRequest List(long accountId, string clientAccountId)
                {
                    return new ListRequest(service, accountId, clientAccountId);
                }

                /// <summary>Lists all the known client users for a specified sponsor buyer account ID.</summary>
                public class ListRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ListClientUsersResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, long accountId, string clientAccountId)
                        : base(service)
                    {
                        AccountId = accountId;
                        ClientAccountId = clientAccountId;
                        InitParameters();
                    }


                    /// <summary>Numerical account ID of the sponsor buyer of the client to list users for.
                    /// (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long AccountId { get; private set; }

                    /// <summary>The account ID of the client buyer to list users for. (required) You must specify
                    /// either a string representation of a numerical account identifier or the `-` character to list
                    /// all the client users for all the clients of a given sponsor buyer.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ClientAccountId { get; private set; }

                    /// <summary>Requested page size. The server may return fewer clients than requested. If
                    /// unspecified, the server will pick an appropriate default.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>A token identifying a page of results the server should return. Typically, this is the
                    /// value of ListClientUsersResponse.nextPageToken returned from the previous call to the
                    /// accounts.clients.users.list method.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "accountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "accountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "clientAccountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "clientAccountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }

                /// <summary>Updates an existing client user. Only the user status can be changed on update.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="accountId">Numerical account ID of the client's sponsor buyer. (required)</param>
                /// <param
                /// name="clientAccountId">Numerical account ID of the client buyer that the user to be retrieved is associated with.
                /// (required)</param>
                /// <param name="userId">Numerical identifier of the user to retrieve.
                /// (required)</param>
                public virtual UpdateRequest Update(Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUser body, long accountId, long clientAccountId, long userId)
                {
                    return new UpdateRequest(service, body, accountId, clientAccountId, userId);
                }

                /// <summary>Updates an existing client user. Only the user status can be changed on update.</summary>
                public class UpdateRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUser>
                {
                    /// <summary>Constructs a new Update request.</summary>
                    public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUser body, long accountId, long clientAccountId, long userId)
                        : base(service)
                    {
                        AccountId = accountId;
                        ClientAccountId = clientAccountId;
                        UserId = userId;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>Numerical account ID of the client's sponsor buyer. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long AccountId { get; private set; }

                    /// <summary>Numerical account ID of the client buyer that the user to be retrieved is associated
                    /// with. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long ClientAccountId { get; private set; }

                    /// <summary>Numerical identifier of the user to retrieve. (required)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual long UserId { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.AdExchangeBuyerII.v2beta1.Data.ClientUser Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "update"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "PUT"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}"; }
                    }

                    /// <summary>Initializes Update parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "accountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "accountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "clientAccountId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "clientAccountId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        RequestParameters.Add(
                            "userId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "userId",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = null,
                            });
                    }

                }
            }

            /// <summary>Creates a new client buyer.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="accountId">Unique numerical account ID for the buyer of which the client buyer is a customer; the
            /// sponsor buyer to create a client for. (required)</param>
            public virtual CreateRequest Create(Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client body, long accountId)
            {
                return new CreateRequest(service, body, accountId);
            }

            /// <summary>Creates a new client buyer.</summary>
            public class CreateRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client body, long accountId)
                    : base(service)
                {
                    AccountId = accountId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Unique numerical account ID for the buyer of which the client buyer is a customer; the
                /// sponsor buyer to create a client for. (required)</summary>
                [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long AccountId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/accounts/{accountId}/clients"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "accountId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "accountId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Gets a client buyer with a given client account ID.</summary>
            /// <param name="accountId">Numerical account ID of the client's sponsor buyer. (required)</param>
            /// <param
            /// name="clientAccountId">Numerical account ID of the client buyer to retrieve. (required)</param>
            public virtual GetRequest Get(long accountId, long clientAccountId)
            {
                return new GetRequest(service, accountId, clientAccountId);
            }

            /// <summary>Gets a client buyer with a given client account ID.</summary>
            public class GetRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, long accountId, long clientAccountId)
                    : base(service)
                {
                    AccountId = accountId;
                    ClientAccountId = clientAccountId;
                    InitParameters();
                }


                /// <summary>Numerical account ID of the client's sponsor buyer. (required)</summary>
                [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long AccountId { get; private set; }

                /// <summary>Numerical account ID of the client buyer to retrieve. (required)</summary>
                [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ClientAccountId { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "accountId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "accountId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "clientAccountId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "clientAccountId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Lists all the clients for the current sponsor buyer.</summary>
            /// <param name="accountId">Unique numerical account ID of the sponsor buyer to list the clients for.</param>
            public virtual ListRequest List(long accountId)
            {
                return new ListRequest(service, accountId);
            }

            /// <summary>Lists all the clients for the current sponsor buyer.</summary>
            public class ListRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.ListClientsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, long accountId)
                    : base(service)
                {
                    AccountId = accountId;
                    InitParameters();
                }


                /// <summary>Unique numerical account ID of the sponsor buyer to list the clients for.</summary>
                [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long AccountId { get; private set; }

                /// <summary>Requested page size. The server may return fewer clients than requested. If unspecified,
                /// the server will pick an appropriate default.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>A token identifying a page of results the server should return. Typically, this is the
                /// value of ListClientsResponse.nextPageToken returned from the previous call to the
                /// accounts.clients.list method.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/accounts/{accountId}/clients"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "accountId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "accountId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates an existing client buyer.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="accountId">Unique numerical account ID for the buyer of which the client buyer is a customer; the
            /// sponsor buyer to update a client for. (required)</param>
            /// <param name="clientAccountId">Unique numerical
            /// account ID of the client to update. (required)</param>
            public virtual UpdateRequest Update(Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client body, long accountId, long clientAccountId)
            {
                return new UpdateRequest(service, body, accountId, clientAccountId);
            }

            /// <summary>Updates an existing client buyer.</summary>
            public class UpdateRequest : AdExchangeBuyerIIBaseServiceRequest<Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client>
            {
                /// <summary>Constructs a new Update request.</summary>
                public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client body, long accountId, long clientAccountId)
                    : base(service)
                {
                    AccountId = accountId;
                    ClientAccountId = clientAccountId;
                    Body = body;
                    InitParameters();
                }


                /// <summary>Unique numerical account ID for the buyer of which the client buyer is a customer; the
                /// sponsor buyer to update a client for. (required)</summary>
                [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long AccountId { get; private set; }

                /// <summary>Unique numerical account ID of the client to update. (required)</summary>
                [Google.Apis.Util.RequestParameterAttribute("clientAccountId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ClientAccountId { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.AdExchangeBuyerII.v2beta1.Data.Client Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "update"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PUT"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v2beta1/accounts/{accountId}/clients/{clientAccountId}"; }
                }

                /// <summary>Initializes Update parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "accountId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "accountId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "clientAccountId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "clientAccountId",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
    }
}

namespace Google.Apis.AdExchangeBuyerII.v2beta1.Data
{    

    /// <summary>A client resource represents a client buyeran agency, a brand, or an advertiser customer of the sponsor
    /// buyer. Users associated with the client buyer have restricted access to the Ad Exchange Marketplace and certain
    /// other sections of the Ad Exchange Buyer UI based on the role granted to the client buyer. All fields are
    /// required unless otherwise specified.</summary>
    public class Client : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The globally-unique numerical ID of the client. The value of this field is ignored in create and
        /// update operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientAccountId")]
        public virtual System.Nullable<long> ClientAccountId { get; set; } 

        /// <summary>Name used to represent this client to publishers. You may have multiple clients that map to the
        /// same entity, but for each client the combination of `clientName` and entity must be unique. You can specify
        /// this field as empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientName")]
        public virtual string ClientName { get; set; } 

        /// <summary>Numerical identifier of the client entity. The entity can be an advertiser, a brand, or an agency.
        /// This identifier is unique among all the entities with the same type.
        ///
        /// A list of all known advertisers with their identifiers is available in the
        /// [advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt) file.
        ///
        /// A list of all known brands with their identifiers is available in the
        /// [brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt) file.
        ///
        /// A list of all known agencies with their identifiers is available in the
        /// [agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt) file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityId")]
        public virtual System.Nullable<long> EntityId { get; set; } 

        /// <summary>The name of the entity. This field is automatically fetched based on the type and ID. The value of
        /// this field is ignored in create and update operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityName")]
        public virtual string EntityName { get; set; } 

        /// <summary>The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; } 

        /// <summary>The role which is assigned to the client buyer. Each role implies a set of permissions granted to
        /// the client. Must be one of `CLIENT_DEAL_VIEWER`, `CLIENT_DEAL_NEGOTIATOR`, or
        /// `CLIENT_DEAL_APPROVER`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; } 

        /// <summary>The status of the client buyer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>Whether the client buyer will be visible to sellers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibleToSeller")]
        public virtual System.Nullable<bool> VisibleToSeller { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A client user is created under a client buyer and has restricted access to the Ad Exchange Marketplace
    /// and certain other sections of the Ad Exchange Buyer UI based on the role granted to the associated client buyer.
    ///
    /// The only way a new client user can be created is via accepting an email invitation (see the
    /// accounts.clients.invitations.create method).
    ///
    /// All fields are required unless otherwise specified.</summary>
    public class ClientUser : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Numerical account ID of the client buyer with which the user is associated; the buyer must be a
        /// client of the current sponsor buyer. The value of this field is ignored in an update operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientAccountId")]
        public virtual System.Nullable<long> ClientAccountId { get; set; } 

        /// <summary>User's email address. The value of this field is ignored in an update operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>The status of the client user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; } 

        /// <summary>The unique numerical ID of the client user that has accepted an invitation. The value of this field
        /// is ignored in an update operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual System.Nullable<long> UserId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An invitation for a new client user to get access to the AdExchange Buyer UI.
    ///
    /// All fields are required unless otherwise specified.</summary>
    public class ClientUserInvitation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Numerical account ID of the client buyer that the invited user is associated with. The value of
        /// this field is ignored in create operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientAccountId")]
        public virtual System.Nullable<long> ClientAccountId { get; set; } 

        /// <summary>The email address to which the invitation is sent. Email addresses should be unique among all
        /// client users under each sponsor buyer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; } 

        /// <summary>The unique numerical ID of the invitation that is sent to the user. The value of this field is
        /// ignored in create operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invitationId")]
        public virtual System.Nullable<long> InvitationId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListClientUserInvitationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The returned list of client users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invitations")]
        public virtual System.Collections.Generic.IList<ClientUserInvitation> Invitations { get; set; } 

        /// <summary>A token to retrieve the next page of results. Pass this value in the
        /// ListClientUserInvitationsRequest.pageToken field in the subsequent call to the clients.invitations.list
        /// method to retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListClientUsersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A token to retrieve the next page of results. Pass this value in the
        /// ListClientUsersRequest.pageToken field in the subsequent call to the clients.invitations.list method to
        /// retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The returned list of client users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("users")]
        public virtual System.Collections.Generic.IList<ClientUser> Users { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListClientsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The returned list of clients.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clients")]
        public virtual System.Collections.Generic.IList<Client> Clients { get; set; } 

        /// <summary>A token to retrieve the next page of results. Pass this value in the ListClientsRequest.pageToken
        /// field in the subsequent call to the accounts.clients.list method to retrieve the next page of
        /// results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
